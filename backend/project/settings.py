"""
Django settings for this project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
# ---------------- SET TO TRUE IF OPENSHIFT DEPLOYMENT  ---------------------------
OPENSHIFT_DEPLOY = False # if this true -> config for openshift used
# ---------------------------------------------------------------------------------

# Site Settings
SITE_VERSION = "v1-0"


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
if not OPENSHIFT_DEPLOY:BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# FOR OPENSHIFT
if OPENSHIFT_DEPLOY:BASE_DIR = r"/opt/app-root/src"#os.environ['OPENSHIFT_REPO_DIR']


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# The SECRET_KEY is provided via an environment variable in OpenShift
SECRET_KEY = os.getenv(
    'DJANGO_SECRET_KEY',
    # safe value used for development when DJANGO_SECRET_KEY might not be set
    '9e4@&tw46$l31)zrqe3wi+-slqm(ruvz&se0^%9#6(_w3ui!c0'
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*', '54.93.245.189','35.157.62.24', 'www.api.sarvo-api.xyz', 'api.sarvo-api.xyz', '192.168.2.116']


# Application definition

INSTALLED_APPS = [
    'channels',
    "sslserver",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pb_model',
    'debug_toolbar',
    'welcome',
    'rest_framework',
    'rest_framework.authtoken',
    'rest'
]
# some modifications for Sarvo user mgmt.
#AUTH_USER_MODEL = 'main_engine.SarvoUser'
#LOGIN_URL = '/api/auth/login/'
#AUTH_USER_MODEL = account.User

AUTH_USER_MODEL = 'auth.User'#''rest.AuthUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

# CORS Config
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_HEADERS = (
     'x-requested-with',
     'content-type',
     'accept',
     'origin',
     'authorization',
     'x-csrftoken'
)
CORS_ALLOW_CREDENTIALS = False

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', )
}

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, r'rest/views/html')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'

# SESSIONS
SESSION_ENGINE='django.contrib.sessions.backends.db'
CSRF_COOKIE_SECURE=False #das false
SESSION_COOKIE_SECURE = False #das false
#os.environ['wsgi.url_scheme'] = 'https' #das weg

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

from . import database

DATABASES = {
    'default': database.config()
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

INTERNAL_IPS = ['127.0.0.1']

# Channels
ASGI_APPLICATION = 'routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}
