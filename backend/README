# Start normally using manage.py runserver 0.0.0.0:1991
# or restart apache sudo /opt/bitnami/ctlscript.sh restart apache
# better use keepAlive file - i.e. sudo nohup python3 keepAlive.py

# THUS: When using apache
# 1) do sudo nohup python3 keepAlive.py
# 2) do Start only cron job using sudo nohup python3 /opt/bitnami/apps/django/django_projects/sarvo/backend/manage.py run
sslserver


KEEP ALIVE CONTENT
import os
from time import sleep
import eventlet
import requests

eventlet.monkey_patch()

while True:
    print("Waiting")
    sleep(45)
    print("waited")


# check if website alive

import subprocess

with eventlet.Timeout(10):
try:
r =requests.get('https://api.sarvo-api.xyz/privacy')
print("OK")
print(str(r).split("[")[-1][:3])
if str(r).split("[")[-1][:3] != "200":
                raise IllegalArgumentException("Restart required")
        except:
  print("Not OK")

  try:
       t1.terminate()
        print("Killed da process")
                sleep(10)
except:
                pass

            print("RESTART")

            print("\n\n\n\n")



            # KILL

            import subprocess



            subprocess = subprocess.Popen(['ps', 'ux'], stdout=subprocess.PIPE)

            output, error = subprocess.communicate()



            target_process = "manage.py runssls"
            target_process2 = "python3"
            for line in output.splitlines():
            if target_process in str(line) or (target_process2 in str(line) and not "keepAlive" in str(line)):
            pass
            #print("Doing")
            #pid = int([k for k in line.decode().split(" ") if k][1])
            #print(str(pid))
            #os.kill(pid, 9)
            #print("killed %s" % str(pid))



            # RESTART

            import os

            import threading

            def go():

            os.system("sudo /opt/bitnami/ctlscript.sh restart apache")
            print("Do the restart of apache")
            t1 = threading.Thread(target=go)

            t1.start()
            sleep(40)

